// Liste des messages d'amour
let romanticMessages = [
    "Tu es mon miracle au quotidien ‚ù§Ô∏è",
    "Chaque jour avec toi est une b√©n√©diction ü•∞",
    "Mon c≈ìur bat pour toi, toujours üíñ",
    "Je t‚Äôaime plus que tout au monde üíï",
    "Tu es la lumi√®re de ma vie ‚ú®",
    "Je suis chanceux(se) de t'avoir ü•Ç",
    "Mon √¢me danse quand je te vois üíÉ",
    "Tu es ma raison de sourire üòä",
    "Ton amour illumine mon monde üåü",
    "Je t'aime plus que les mots ne peuvent le dire ‚ù§Ô∏è‚Äçüî•",
    // Ajouter ici les phrases pr√©c√©demment donn√©es
    "Ton sourire est le plus beau cadeau de chaque journ√©e üíù",
    "Avec toi, la vie est une aventure magique üåà",
    "Tu es la m√©lodie qui r√©sonne dans mon c≈ìur üéµ",
    "Dans tes bras, j‚Äôai trouv√© ma maison üè°",
    "Chaque moment avec toi est une b√©n√©diction infinie üôè",
    "Je t‚Äôaime comme le soleil aime √©clairer la terre ‚òÄÔ∏è",
    "Tu es l‚Äô√©toile qui guide mes nuits üåü",
    "Aimer, c‚Äôest toi et moi pour l‚Äô√©ternit√© üíû",
    "Tu es mon tr√©sor, ma lumi√®re, mon tout üíé",
    "Avec toi, chaque jour est un r√™ve devenu r√©alit√© üí§",
    "Ton rire est la musique la plus douce que j‚Äôai entendue üé∂",
    "Mon c≈ìur est rempli d‚Äôamour gr√¢ce √† toi ‚ù§Ô∏è",
    "Tu es mon souffle, ma vie, mon univers üåå",
    "Avec toi, chaque seconde compte üíì",
    "Je t‚Äôaime aujourd‚Äôhui plus qu‚Äôhier, mais moins que demain üíï",
    "Ton amour est le feu qui r√©chauffe mon √¢me üî•",
    "Je t‚Äôaime plus que les √©toiles ne brillent dans le ciel ‚ú®",
    "Tu es ma force et ma faiblesse, tout √† la fois üí™",
    "Avec toi, chaque instant est pr√©cieux üíç",
    "Je suis amoureux(se) de toi comme le premier jour üåπ",
    "Tu es ma raison de sourire chaque matin üòä",
    "Mon c≈ìur chante ton nom chaque jour üé§",
    "Je t‚Äôaime plus que les mots ne peuvent l‚Äôexprimer ‚ù§Ô∏è‚Äçüî•",
    "Ton amour est la lumi√®re dans mes jours les plus sombres üå§Ô∏è",
    "Avec toi, tout est possible ü¶ã",
    "Tu es ma po√©sie pr√©f√©r√©e üìù",
    "Mon c≈ìur est captif de ton amour üíù",
    "Chaque baiser est une promesse d‚Äô√©ternit√© üíã",
    "Tu es le cadeau que la vie m‚Äôa offert üéÅ",
    "Mon amour pour toi est infini ‚ôæÔ∏è",
    "Avec toi, je suis la meilleure version de moi-m√™me üåü",
    "Tu es ma raison de vivre, mon r√™ve √©veill√© üå†",
    "Ton amour est la plus belle des aventures üåé",
    "Je t‚Äôaime plus que l‚Äôoc√©an ne contient d‚Äôeau üåä",
    "Tu es ma lumi√®re dans l‚Äôobscurit√© üïØÔ∏è",
    "Avec toi, mon c≈ìur trouve la paix üïäÔ∏è",
    "Je t‚Äôaime plus que tout au monde üåç",
    "Tu es la clef de mon bonheur üîë",
    "Chaque jour √† tes c√¥t√©s est une b√©n√©diction üôå",
    "Tu es mon √©toile filante dans le ciel üå†",
    "Mon amour pour toi est aussi grand que l‚Äôunivers üí´",
    "Avec toi, chaque instant est un tr√©sor üíé",
    "Ton sourire illumine ma vie comme un rayon de soleil ‚òÄÔ∏è",
    "Je suis combl√©(e) par ton amour ‚ù§Ô∏è",
    "Tu es la plus belle chose qui me soit arriv√©e üå∏",
    "Avec toi, je ne crains rien üí™",
    "Je t‚Äôaime plus que les mots ne peuvent le dire üíû",
    "Ton amour est mon refuge üè°",
    "Tu es la flamme qui fait battre mon c≈ìur üî•",
    "Avec toi, la vie est un conte de f√©es üßö",
    "Je t‚Äôaime d‚Äôun amour √©ternel ‚ôæÔ∏è",
    "Ton rire est la plus belle m√©lodie de ma vie üéµ",
    "Tu es mon espoir et mon inspiration üåü",
    "Mon c≈ìur est combl√© gr√¢ce √† toi üíì",
    "Avec toi, chaque jour est une f√™te üéâ",
    "Tu es mon tout, mon univers, mon amour üåå",
    "Je t‚Äôaime comme je n‚Äôai jamais aim√© personne ‚ù§Ô∏è‚Äçüî•",
    "Ton amour est ma force üí™",
    "Je suis √† toi pour l‚Äô√©ternit√© üíï",
    "Avec toi, tout prend un sens profond üåä",
    "Tu es la meilleure partie de moi üíû",
    "Mon c≈ìur est √† toi, maintenant et pour toujours üíñ",
    "Chaque instant √† tes c√¥t√©s est magique ‚ú®",
    "Tu es ma muse, mon inspiration üå∫",
    "Avec toi, la vie est pleine de couleurs üåà",
    "Je t‚Äôaime plus que l‚Äôunivers ne contient d‚Äô√©toiles üåå",
    "Tu es mon miracle, mon r√™ve √©veill√© üåü",
    "Ton amour est la lumi√®re de mon existence üí°",
    "Avec toi, chaque jour est une aventure merveilleuse üåç",
    "Je t‚Äôaime plus que tout ce que je pourrais imaginer üíì",
    "Tu es la personne qui donne un sens √† ma vie üíû",
    "Ton sourire illumine mon √¢me ‚òÄÔ∏è",
    "Avec toi, je me sens invincible üí™",
    "Tu es ma maison, mon refuge, mon tout üè°",
    "Je t‚Äôaime d‚Äôun amour pur et sinc√®re ‚ù§Ô∏è",
    "Ton amour est le soleil de ma vie üåû",
    "Avec toi, la vie est douce et belle ü¶ã",
    "Tu es mon tr√©sor inestimable üíé",
    "Mon amour pour toi est √©ternel ‚ôæÔ∏è",
    "Tu es la meilleure chose qui me soit arriv√©e üåü"
];
let originalMessages = [...romanticMessages];
// Cr√©er la sc√®ne
const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);
const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

// Support pour la boule de cristal
const supportGeometry = new THREE.CylinderGeometry(3.5, 4, 2, 32);
const supportMaterial = new THREE.MeshStandardMaterial({
    color: 0xd4af37, // Dor√©
    metalness: 0.8,
    roughness: 0.2,
});
const supportMesh = new THREE.Mesh(supportGeometry, supportMaterial);
supportMesh.position.set(0, -2, 0);
scene.add(supportMesh);

// Boule de cristal avec effet verre
const crystalGeometry = new THREE.SphereGeometry(5, 64, 64);
const crystalMaterial = new THREE.MeshPhysicalMaterial({
    transmission: 0.6,
    roughness: 0.1,
    thickness: 2,
    clearcoat: 1.0,
    clearcoatRoughness: 0.02,
    envMapIntensity: 1.5,
    reflectivity: 0.5,
    ior: 1.4,
    opacity: 0.95,
    transparent: true,
});
const crystalBall = new THREE.Mesh(crystalGeometry, crystalMaterial);
crystalBall.position.set(0, 3, 0);
scene.add(crystalBall);

// Ajouter un effet de lumi√®re color√©e √† l'int√©rieur de la sph√®re
const colorLight = new THREE.PointLight(0xffffff, 2, 50);
colorLight.position.set(0, 3, 0);
scene.add(colorLight);

// Fonction pour animer les couleurs
let colorChangeSpeed = 0.01; // Vitesse du changement de couleur
let hue = 0; // Teinte de la couleur (0-1)
function updateColor() {
    hue += colorChangeSpeed;
    if (hue > 1) hue = 0; // R√©initialiser la teinte
    const color = new THREE.Color().setHSL(hue, 0.7, 0.5); // Cr√©er une couleur HSL
    colorLight.color = color; // Appliquer la couleur √† la lumi√®re
}

// Ajouter un texte visible sur le site
const domText = document.createElement("div");
domText.style.position = "absolute";
domText.style.bottom = "20px"; // Texte plac√© en bas de l'√©cran
domText.style.width = "100%";
domText.style.textAlign = "center";
domText.style.color = "white";
domText.style.fontFamily = "Arial, sans-serif";
domText.style.fontSize = "24px";
domText.style.textShadow = "2px 2px 5px black";
domText.style.opacity = "1"; // Opacit√© initiale
domText.style.transition = "opacity 1s ease-in-out"; // Transition fluide
domText.innerHTML = "Cliquez sur la sph√®re pour recevoir un message ‚ù§Ô∏è";
document.body.appendChild(domText);

// Fonction pour mettre √† jour le texte avec un effet de transition
function updateText(newMessage) {
    domText.style.opacity = "0"; // Commencer par masquer le texte
    setTimeout(() => {
        domText.innerHTML = newMessage; // Changer le message une fois masqu√©
        domText.style.opacity = "1"; // R√©afficher le texte avec une transition
    }, 1000); // Attendre la fin de l'effet de fondu (1s)
}

// Mettre √† jour le texte au clic
document.body.addEventListener("click", () => {
    if (romanticMessages.length === 0) {
        romanticMessages = [...originalMessages]; // R√©initialiser les messages
    }
    const randomIndex = Math.floor(Math.random() * romanticMessages.length);
    const randomMessage = romanticMessages[randomIndex];
    romanticMessages.splice(randomIndex, 1);

    updateText(randomMessage); // Appeler la fonction de transition
});

// Flocons de neige dans la boule
const snowParticles = new THREE.Group();
for (let i = 0; i < 500; i++) {
    const snowGeometry = new THREE.SphereGeometry(0.05, 8, 8);
    const snowMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });
    const snowflake = new THREE.Mesh(snowGeometry, snowMaterial);

    const radius = 4.5;
    let x, y, z;
    do {
        x = (Math.random() - 0.5) * 10;
        y = (Math.random() - 0.5) * 10;
        z = (Math.random() - 0.5) * 10;
    } while (Math.sqrt(x * x + y * y + z * z) > radius);

    snowflake.position.set(x, y + 3, z);
    snowParticles.add(snowflake);
}
scene.add(snowParticles);

// Lumi√®res
const light1 = new THREE.PointLight(0xffffff, 1.2, 100);
light1.position.set(10, 10, 10);
scene.add(light1);

const light2 = new THREE.PointLight(0xfff0e0, 0.8, 100);
light2.position.set(-10, -10, -10);
scene.add(light2);

// Cam√©ra et animation
camera.position.z = 20;

function animate() {
    requestAnimationFrame(animate);

    // Faire tourner la boule et d√©placer les flocons
    crystalBall.rotation.y += 0.002;
    snowParticles.children.forEach((snowflake) => {
        snowflake.position.y -= 0.02;
        if (snowflake.position.y < -2) snowflake.position.y = 7;
    });

    updateColor(); // Changer les couleurs dans la sph√®re

    renderer.render(scene, camera);
}

animate();

// Ajustement lors du redimensionnement
window.addEventListener("resize", () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
});

// Contr√¥les de la musique avec SoundCloud
const soundcloudPlayer = document.getElementById("soundcloud-player");
const playButton = document.getElementById("play-music");
const pauseButton = document.getElementById("pause-music");

// Contr√¥les de la musique
const playButton = document.getElementById("play-music");
const pauseButton = document.getElementById("pause-music");

// Ajout d'une balise audio
const audio = new Audio("https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3");
audio.loop = true; // Activer la boucle pour r√©p√©ter la musique

// Lecture de la musique
playButton.addEventListener("click", () => {
    audio.play()
        .then(() => console.log("Musique en lecture."))
        .catch((error) => console.error("Erreur lors de la lecture :", error));
});

// Pause de la musique
pauseButton.addEventListener("click", () => {
    audio.pause();
    console.log("Musique mise en pause.");
});

// Code existant : Sc√®ne Three.js et boule de cristal
// (Ne change pas le reste du code de la sc√®ne)
document.addEventListener("DOMContentLoaded", () => {
    const video = document.getElementById("background-video");

    // Forcer la lecture de la vid√©o apr√®s le chargement
    video.play().catch((error) => {
        console.log("Autoplay bloqu√©, utilisateur requis :", error);
    });

    // En cas d'erreur ou si la vid√©o ne se joue pas
    video.addEventListener("error", () => {
        document.body.classList.add("no-video");
    });
});
